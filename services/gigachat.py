# services/gigachat.py
import json
import requests
from logger.logger import logger

PROXY_HOST = "http://10.63.0.110:8000"

PROMPT_TEMPLATE = """
–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π –∏–≥—Ä–æ–≤–æ–π –∂—É—Ä–Ω–∞–ª–∏—Å—Ç. –ù–∞ –≤—Ö–æ–¥ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –∏–ª–∏ —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–Ω—É—é –∑–∞–º–µ—Ç–∫—É –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–∞–±–ª–∏–∫–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏.

–ü—Ä–∞–≤–∏–ª–∞ –∏ —Ü–µ–ª–∏:

–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–æ–≤–æ—Å—Ç–∏:
–ó–∞–≥–æ–ª–æ–≤–æ–∫: –∫–æ—Ä–æ—Ç–∫–∏–π, –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π, —Å –¥–∏–Ω–∞–º–∏–∫–æ–π (–¥–æ 10 —Å–ª–æ–≤).
–ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): —É—Ç–æ—á–Ω—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏–ª–∏ –ø–æ–¥—Ç–µ–º—ã.
–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç (5‚Äì10 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π):
–∏–∑–ª–æ–∂–∏ —Å—É—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ—Å—Ç–æ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ;
—É–ø–æ–º—è–Ω–∏ –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã (—á—Ç–æ, –∫—Ç–æ, –∫–æ–≥–¥–∞, –ø–æ—á–µ–º—É, –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è/—Ä–µ–∞–∫—Ü–∏—è);
–¥–æ–±–∞–≤—å –ª—ë–≥–∫–∏–π –ø—É–±–ª–∏—Ü–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å, –Ω–æ –∏–∑–±–µ–≥–∞–π –∫–ª–∏–∫–±–µ–π—Ç–∞;
–ø—Ä–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ ‚Äì –¥–µ–ª–∞–π —ç—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ ("—Å–æ–æ–±—â–∞–µ—Ç [–Ω–∞–∑–≤–∞–Ω–∏–µ]").
–¢–µ–≥–∏/—Ö—ç—à—Ç–µ–≥–∏: 3‚Äì5 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ø–æ —Ç–µ–º–µ (–Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã, –∂–∞–Ω—Ä, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, —Å–æ–±—ã—Ç–∏–µ, —Å—Ç—É–¥–∏—è).
–¢–æ–Ω –ø–æ–¥–∞—á–∏: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, —É–º–µ—Ä–µ–Ω–Ω–æ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, –±–µ–∑ –≥—Ä—É–±–æ—Å—Ç–∏ –∏ —Ñ–∞–Ω–∞—Ç–∏–∑–º–∞.
Imagine ‚Äî —Ç—ã –∞–≤—Ç–æ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ Telegram-–∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –ø–∞–±–ª–∏–∫–∞ –≤–æ ¬´–í–ö–æ–Ω—Ç–∞–∫—Ç–µ¬ª, –≥–¥–µ –∞—É–¥–∏—Ç–æ—Ä–∏—è –ª—é–±–∏—Ç –∏–≥—Ä—ã, –Ω–æ —Ü–µ–Ω–∏—Ç —Ç–æ—á–Ω–æ—Å—Ç—å.

–°—Ç–∏–ª—å:
–∏–∑–±–µ–≥–∞–π —Å–ª–æ–∂–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤, –ø–∏—à–∏ –∂–∏–≤–æ;
–¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –ª—ë–≥–∫–∞—è –∏—Ä–æ–Ω–∏—è, –µ—Å–ª–∏ —É–º–µ—Å—Ç–Ω–∞;
–ø–æ–º–Ω–∏ –æ —è—Å–Ω–æ—Å—Ç–∏ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ—Å—Ç–∏.

–ù–∞ –≤—ã—Ö–æ–¥–µ –≤–µ—Ä–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:

–ó–∞–≥–æ–ª–æ–≤–æ–∫: "–¢–µ–∫—Å—Ç"

–¢–µ–∫—Å—Ç: "–°–∞–º–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ"

–°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫: {url_or_text}
üîñ –¢–µ–≥–∏:
#–ø—Ä–∏–º–µ—Ä #–∏–≥—Ä—ã #–Ω–æ–≤–æ—Å—Ç–∏

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
URL —Å–∞–π—Ç–∞ –∏–ª–∏ –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å—Ç–∞—Ç—å–∏: {url_or_text}
"""


def get_gigachat_token():
    """–ü–æ–ª—É—á–∞–µ–º access_token —É –ø—Ä–æ–∫—Å–∏."""
    try:
        logger.debug("üîë –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω —É GigaChat-–ø—Ä–æ–∫—Å–∏...")
        resp = requests.post(f"{PROXY_HOST}/oauth/", timeout=5)
        resp.raise_for_status()
        token = resp.json().get("access_token")
        if not token:
            raise ValueError("–ü—Ä–æ–∫—Å–∏ –Ω–µ –≤–µ—Ä–Ω—É–ª access_token")
        logger.debug("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω.")
        return token
    except Exception as e:
        logger.error(f"üí• –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        raise


def generate_gigachat_summary(url_or_text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ GigaChat –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–π –Ω–æ–≤–æ—Å—Ç–∏ —Å –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""
    try:
        token = get_gigachat_token()
        headers = {
            "Authorization": f"Bearer {token}",
            "Content-Type": "application/json",
        }

        prompt = PROMPT_TEMPLATE.format(url_or_text=url_or_text)
        payload = {
            "model": "GigaChat",
            "messages": [{"role": "user", "content": prompt}],
            "stream": False,
            "repetition_penalty": 1,
        }

        # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º—ã–π –ø—Ä–æ–º—Ç (–≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö)
        trimmed_prompt = prompt[:600] + ("‚Ä¶" if len(prompt) > 600 else "")
        logger.debug(f"‚û°Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ GigaChat –¥–ª—è URL: {url_or_text}\n---PROMPT START---\n{trimmed_prompt}\n---PROMPT END---")

        resp = requests.post(f"{PROXY_HOST}/chat/completions", headers=headers, json=payload, timeout=90)
        resp.raise_for_status()

        data = resp.json()
        reply = data["choices"][0]["message"]["content"]

        # –£—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –ª–æ–≥–æ–≤
        trimmed_reply = reply[:600] + ("‚Ä¶" if len(reply) > 600 else "")
        logger.debug(f"‚¨ÖÔ∏è –û—Ç–≤–µ—Ç GigaChat –¥–ª—è URL: {url_or_text}\n---REPLY START---\n{trimmed_reply}\n---REPLY END---")

        logger.info(f"‚ú® –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –æ—Ç GigaChat ({len(reply)} —Å–∏–º–≤–æ–ª–æ–≤).")
        return reply

    except requests.Timeout:
        logger.error(f"‚è∞ –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ GigaChat –¥–ª—è {url_or_text}")
        return f"‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä GigaChat –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤–æ–≤—Ä–µ–º—è. –ò—Å—Ç–æ—á–Ω–∏–∫: {url_or_text}"
    except Exception as e:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å –¥–µ—Ç–∞–ª—è–º–∏ JSON –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        try:
            debug_data = json.dumps(resp.json(), ensure_ascii=False, indent=2)[:1000]
            logger.debug(f"üì¶ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ: {debug_data}")
        except Exception:
            pass

        logger.error(f"üí• –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –æ–±—â–µ–Ω–∏—è —Å GigaChat –¥–ª—è {url_or_text}: {e}")
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–∏\n{url_or_text}"
