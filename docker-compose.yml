version: "3"

services:
  postgres:
    image: postgres:17
    container_name: gamercommunity_postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'pg_isready -h "$POSTGRES_HOST" -p "$POSTGRES_PORT" -U "$POSTGRES_USER"',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env

  app:
    build: .
    container_name: gamercommunity_bot
    restart: always
    command: "python3 main.py"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./backup:/app/backup
    networks:
      - backend-network
    env_file:
      - ./.env

volumes:
  postgres-data:

networks:
  backend-network:
    driver: bridge
