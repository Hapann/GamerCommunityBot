# main.py
import asyncio
from aiogram import Bot, Dispatcher
from handlers.latest import news_router
from dotenv import load_dotenv
import os
from logger.logger import logger

# –í–∞—à–∏ –¥—Ä—É–≥–∏–µ –∏–º–ø–æ—Ä—Ç—ã
from database.db import init_db
from handlers import user_handlers
from services.scheduler import setup_scheduler

load_dotenv()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
TOKEN = os.getenv("TOKEN")
CHAT_ID = os.getenv("CHAT_ID")
TOPIC_ID = os.getenv("TOPIC_ID")

logger.info(f"–ó–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env: TOKEN={'***' if TOKEN else '–ù–ï–¢'}, CHAT_ID={CHAT_ID}, TOPIC_ID={TOPIC_ID}")

if not os.getenv("TOKEN"):
    raise ValueError("‚ùå TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

bot = Bot(token=os.getenv("TOKEN"))
dp = Dispatcher()

async def test_rss_manually():
    """–†—É—á–Ω–æ–π —Ç–µ—Å—Ç RSS-—á–∏—Ç–∞–ª–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ."""
    logger.info("üîß –ó–∞–ø—É—Å–∫ —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ RSS-—á–∏—Ç–∞–ª–∫–∏...")
    try:
        from services.rss_reader import get_all_rss_news
        news = await get_all_rss_news()
        logger.info(f"üîß –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: {len(news)} –Ω–æ–≤–æ—Å—Ç–µ–π")

        if news:
            for i, item in enumerate(news[:3]):
                logger.info(f"üîß –ù–æ–≤–æ—Å—Ç—å {i+1}: {item['title'][:50]}...")
        else:
            logger.warning("üîß –†—É—á–Ω–æ–π —Ç–µ—Å—Ç: –Ω–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")

    except Exception as e:
        logger.exception(f"üîß –û—à–∏–±–∫–∞ –≤ —Ä—É—á–Ω–æ–º —Ç–µ—Å—Ç–µ RSS: {e}")

async def main():
    try:
        await init_db()

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
        dp.include_router(user_handlers.router)
        dp.include_router(news_router)

        setup_scheduler()

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ä—É—á–Ω–æ–π —Ç–µ—Å—Ç RSS –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        await test_rss_manually()

        print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª–µ–¥–∏—Ç –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏.")
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")

        await dp.start_polling(bot)

    except Exception as e:
        logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())
